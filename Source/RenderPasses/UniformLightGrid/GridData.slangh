#pragma once
#include "Utils/HostDeviceShared.slangh"

BEGIN_NAMESPACE_FALCOR

struct UniformGrid
{
    float3 pos = float3(0, 0, 0);
    float3 intensity = float3(0, 0, 0);
    uint2 range = uint2(0, 0);

    uint gridIndex = 0;
    uint mortonCode = 0;
    bool isLeafNode = false;
    float flux = 0;
    // TODO: compute padding
};

struct OctreeNode
{
    float3 pos = float3(0, 0, 0);
    float3 intensity = float3(0, 0, 0);
    uint  mortonCode = 0;
    uint  prefixLength = 0;
    uint2 childRange = uint2(0, 0);
    uint2 triangleRange = uint2(0, 0);
    bool  isLeaf = false;
    // above attributes use 13 * 4 bytes, add 3 * 4 bytes padding
    float3 paddingAndDebug = float3(0, 0, 0);
};

END_NAMESPACE_FALCOR
