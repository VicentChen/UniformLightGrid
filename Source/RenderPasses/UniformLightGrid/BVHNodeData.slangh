#pragma once
#include "Utils/HostDeviceShared.slangh"

// FIXME: we need to use uint in c++, uint was declared in Falcor naming space
BEGIN_NAMESPACE_FALCOR

struct BVHInternalNode
{
    bool isLChildLeaf = false;
    bool isRChildLeaf = false;
    uint commonPrefixLength = 0;

    uint lChildId = 0;
    uint rChildId = 0;
    uint splitMortonCode = 0;
    uint split = 0;
    uint2 range = uint2(0, 0);
    float3 intensity = float3(0, 0, 0);

#ifdef HOST_CODE
    bool getIsLChildLeaf() { return isLChildLeaf; }
    bool getIsRChildLeaf() { return isRChildLeaf; }
    uint getCommonPrefixLength() { return commonPrefixLength; }
    void setIsLChildLeaf(bool b) { isLChildLeaf = b; }
    void setIsRChildLeaf(bool b) { isRChildLeaf = b; }
    void setCommonPrefixLength(uint l) { commonPrefixLength = l; }
#else
    bool getIsLChildLeaf() { return isLChildLeaf; }
    bool getIsRChildLeaf() { return isRChildLeaf; }
    uint getCommonPrefixLength() { return commonPrefixLength; }
    [mutating] void setIsLChildLeaf(bool b) { isLChildLeaf = b; }
    [mutating] void setIsRChildLeaf(bool b) { isRChildLeaf = b; }
    [mutating] void setCommonPrefixLength(uint l) { commonPrefixLength = l; }
#endif
};

END_NAMESPACE_FALCOR
