#pragma once
#include "Utils/HostDeviceShared.slangh"

struct InternalNode
{
    bool isLChildLeaf = false;
    bool isRChildLeaf = false;
    uint commonPrefixLength = 0;

    uint lChildId = 0;
    uint rChildId = 0;
    uint splitPoint = 0;
    uint commonPrefix = 0;
    uint2 range = uint2(0, 0);

#ifdef HOST_CODE
    bool getIsLChildLeaf() { return isLChildLeaf; }
    bool getIsRChildLeaf() { return isRChildLeaf; }
    uint getCommonPrefixLength() { return commonPrefixLength; }
    void setIsLChildLeaf(bool b) { isLChildLeaf = b; }
    void setIsRChildLeaf(bool b) { isRChildLeaf = b; }
    void setCommonPrefixLength(uint l) { commonPrefixLength = l; }
#else
    bool getIsLChildLeaf() { return isLChildLeaf; }
    bool getIsRChildLeaf() { return isRChildLeaf; }
    uint getCommonPrefixLength() { return commonPrefixLength; }
    [mutating] void setIsLChildLeaf(bool b) { isLChildLeaf = b; }
    [mutating] void setIsRChildLeaf(bool b) { isRChildLeaf = b; }
    [mutating] void setCommonPrefixLength(uint l) { commonPrefixLength = l; }
#endif
};

struct LeafNode
{
    uint mortonCode = 0;
    uint triangleIdx = 0;
};
